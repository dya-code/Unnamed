import Head from 'next/head'
import Image from 'next/image'
import { useRouter } from 'next/router'
import { Fragment, useEffect, useRef, useState } from 'react'
import axios from 'axios'
import { useGoogleLogin } from '@react-oauth/google'
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'
import { faXmark } from '@fortawesome/free-solid-svg-icons'

import Nav from './nav'

import GoogleLogo from '../assets/google.png'
import KakaoLogo from '../assets/kakao.png'
import Script from 'next/script'

export default function SignIn() {
  const router = useRouter()
  const [account, setAccount] = useState('')

  const getGoogleOAuth = useGoogleLogin({
    onSuccess: async (tokenResponse) => {

      await axios.get("https://www.googleapis.com/oauth2/v2/userinfo", {
        headers: {
          Authorization: `Bearer ${tokenResponse.access_token}`,
        },
      })
      .then( async (res: { data: { name: string, email: string } }) => {
        
        const prisma_res = await fetch(`http://localhost:3000/api/db/create?email=${res.data.email}&name=${res.data.name}`, {
          method: 'GET',
          headers: {
            "Content-Type": "application/json",
          },
        })
        const data = await prisma_res.json()

        if (!await data.res) {
          alert("다시 만나서 반가워요, " + res.data.name + "님!")
          sessionStorage.setItem('Account', res.data.name)
          sessionStorage.setItem('Email', res.data.email)
          router.push('/')
        } else {
          alert("환영합니다, " + res.data.name + "님!")
          sessionStorage.setItem('Account', res.data.name)
          sessionStorage.setItem('Email', res.data.email)
          router.push('/')
        }

        // const _prisma_res = await fetch(`http://localhost:3000/api/db/view?scale=all`, {
        //   method: 'GET',
        //   headers: {
        //       "Content-Type": "application/json",
        //   },
        // })
        // const _data = await _prisma_res.json()
        // console.log(await _data.res)
        
        // console.log('login successful by google, ' + res.data.email)
      })
      .catch(() => {
        alert("oAuth token expired")
      })
    },
    onError: errorResponse => console.log(errorResponse)
  })

  const getKakaoOAuth = () => {
    const jsKey = "da67909b86ab4ecd2c6c0fe94c1d65b7"
    const Kakao = window.Kakao
    if (Kakao && !Kakao.isInitialized()) {
      Kakao.init(jsKey);
      console.log(Kakao.isInitialized())
    }

    Kakao.Auth.login({
      success() {
        Kakao.API.request({
          url: "/v2/user/me",
          async success(res: any) {
            const kakaoAccount = res.kakao_account;

            // const prisma_res = await fetch(`http://localhost:3000/api/db/create?email=${kakaoAccount.profile.email}&name=${res.data.name}`, {
            //   method: 'GET',
            //   headers: {
            //     "Content-Type": "application/json",
            //   },
            // })
            // const data = await prisma_res.json()
            // console.log(await data.res)

            console.log('login successful by kakao, ' + await kakaoAccount.profile.email)
            sessionStorage.setItem('Account', kakaoAccount.profile.nickname)
            router.push('/')
          },
          fail(error: any) {
            console.log(error)
          },
        })
      },
      fail(error: any) {
        console.log(error);
      },
    });
  }

  return (
    <Fragment>
      <Head>
        <title>Annumity - Sign in</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Nav />

      <main className='flex-el'>
        <div className="sign-title">Sign in</div>

        <div className="oAuth">
          <button className='google-btn' onClick={() => getGoogleOAuth()}>
            <Image className='google-logo' src={GoogleLogo} alt={''} />
            <div className="oauth-btn-text">구글로 로그인</div>
          </button>

          <button className='kakao-btn' onClick={() => getKakaoOAuth()}>
            <Image className='kakao-logo' src={KakaoLogo} alt={''} />
            <div className="oauth-btn-text">카카오로 로그인</div>
          </button>
        </div>

        { account ?
          <div className="card">
            <div className="">로그인 되었습니다</div>
            <button onClick={() => setAccount('false')}>로그아웃</button>
          </div>
        : null }
      </main>

    </Fragment>
  )
}

// export async function getStaticProps() {
//   const res = await fetch('http://localhost:3000/api/db/view', {
//     method: 'GET',
//     headers: {
//         "Content-Type": "application/json",
//     },
//   })
//   const data = await res.json()
//   console.log(data)

//   return { props: { daily: data.res } }
// }